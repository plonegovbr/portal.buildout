[buildout]
extends =
    buildout.d/base.cfg
    buildout.d/sources.cfg
    buildout.d/versions.cfg
    checkouts.cfg

parts +=
    checkversions
    createzopecoverage
# FIXME: Necessário ver se não é necessário adicionar outro pacote na seção
# [portal], pois dá o erro "main_template" num site Plone de id "portal" recém
# criado.
# portal
    i18ndude
    omelette
    flake8
    robot
    test
    test-dependencies
    versions-dump

package-extras = [test]
eggs +=
    brasil.gov.paginadestaque
    sauna.reload
#    Products.PDBDebugMode
    Products.PrintingMailHost
    plone.app.robotframework

test-eggs =
zcml +=

extensions += mr.developer

[checkversions]
recipe=zc.recipe.egg
eggs=z3c.checkversions [buildout]

[createzopecoverage]
recipe = createzopecoverage

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[instance]
port-base = 0
debug-mode = on
verbose-security = on
#event-log-level = DEBUG
environment-vars +=
#    CHAMELEON_DEBUG true
zope-conf-additional +=
    http-realm Desenv
#    %import sauna.reload

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[flake8]
recipe = zc.recipe.egg
eggs = flake8

[portal]
recipe = collective.recipe.plonesite
site-id = portal
default-language = pt-br
profiles =
    brasil.gov.portal:default
    brasil.gov.portal:initcontent

site-replace = True

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${buildout:package-name} ${buildout:package-extras}
    ${buildout:test-eggs}

[test-dependencies]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    collective.cover [test]
    collective.googleanalytics
    collective.nitf [test]
    collective.polls [test]
    collective.upload [test]
    collective.z3cform.widgets [test]
    five.pt
    plone.app.contenttypes [test]
    sc.contentrules.groupbydate [test]
    sc.contentrules.layout [test]
    sc.contentrules.metadata [test]
    sc.embedder [test]
    sc.social.like [test]

[robot]
recipe = zc.recipe.egg
eggs =
    ${instance:eggs}
    plone.app.robotframework[reload]

[versions-dump]
# keep versions.cfg file for closed production environments updated
recipe = plone.recipe.command
file = ${buildout:directory}/etc/versions.cfg
command =
    echo "# THIS FILE IS GENERATED AUTOMATICALLY\n[versions]" > ${:file}
    bin/buildout annotate versions | tail -n +6 | grep "= " | sed 's/= / = /' | sort >> ${:file}
update-command = ${:command}
